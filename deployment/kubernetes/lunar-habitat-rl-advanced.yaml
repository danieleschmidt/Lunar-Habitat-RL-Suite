# Advanced Kubernetes Deployment for Lunar Habitat RL Suite
# Production-grade deployment with auto-scaling, monitoring, and disaster recovery
# Compatible with NASA space-qualified computing environments

apiVersion: v1
kind: Namespace
metadata:
  name: lunar-habitat-rl
  labels:
    name: lunar-habitat-rl
    mission: artemis
    classification: nasa-trl-6

---
# ConfigMap for advanced configuration
apiVersion: v1
kind: ConfigMap
metadata:
  name: lunar-habitat-config
  namespace: lunar-habitat-rl
data:
  environment: "production"
  mission_phase: "artemis_surface_operations"
  safety_mode: "enabled"
  physics_validation: "strict"
  causal_reasoning: "enabled"
  meta_adaptation: "enabled"
  log_level: "INFO"
  metrics_endpoint: "http://prometheus-service:9090"
  
  # Advanced algorithm configurations
  causal_rl_config: |
    fisher_information_update_rate: 1000
    causal_graph_learning_rate: 0.001
    counterfactual_validation: true
    intervention_threshold: 0.95
  
  hamiltonian_rl_config: |
    energy_conservation_tolerance: 0.01
    symplectic_integration_steps: 5
    thermodynamic_validation: true
    physics_constraint_weight: 0.1
  
  meta_adaptation_config: |
    adaptation_episodes: 5
    episodic_memory_size: 10000
    ewc_lambda: 1000
    safety_buffer_size: 1000

---
# Secret for sensitive configuration
apiVersion: v1
kind: Secret
metadata:
  name: lunar-habitat-secrets
  namespace: lunar-habitat-rl
type: Opaque
data:
  # Base64 encoded values
  nasa_api_key: bHVuYXItaGFiaXRhdC1uYXNhLWFwaS1rZXk=
  telemetry_key: dGVsZW1ldHJ5LWVuY3J5cHRpb24ta2V5
  backup_access_key: YmFja3VwLXN0b3JhZ2UtYWNjZXNzLWtleQ==

---
# Primary Deployment - Causal RL Service
apiVersion: apps/v1
kind: Deployment
metadata:
  name: causal-rl-service
  namespace: lunar-habitat-rl
  labels:
    app: causal-rl
    algorithm: causal-reasoning
    tier: primary
spec:
  replicas: 3
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
  selector:
    matchLabels:
      app: causal-rl
  template:
    metadata:
      labels:
        app: causal-rl
        algorithm: causal-reasoning
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8080"
        prometheus.io/path: "/metrics"
    spec:
      serviceAccountName: lunar-habitat-sa
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        fsGroup: 2000
      containers:
      - name: causal-rl
        image: terragon/lunar-habitat-rl:causal-v2.0
        imagePullPolicy: Always
        ports:
        - containerPort: 8080
          name: http-api
        - containerPort: 9090
          name: metrics
        env:
        - name: ALGORITHM_TYPE
          value: "causal_rl"
        - name: DEPLOYMENT_ENV
          value: "production"
        - name: NASA_API_KEY
          valueFrom:
            secretKeyRef:
              name: lunar-habitat-secrets
              key: nasa_api_key
        envFrom:
        - configMapRef:
            name: lunar-habitat-config
        resources:
          requests:
            cpu: "1000m"
            memory: "2Gi"
            nvidia.com/gpu: "1"
          limits:
            cpu: "4000m"
            memory: "8Gi"
            nvidia.com/gpu: "1"
        livenessProbe:
          httpGet:
            path: /health/live
            port: 8080
          initialDelaySeconds: 60
          periodSeconds: 30
        readinessProbe:
          httpGet:
            path: /health/ready
            port: 8080
          initialDelaySeconds: 30
          periodSeconds: 10
        volumeMounts:
        - name: model-storage
          mountPath: /app/models
        - name: episodic-memory
          mountPath: /app/memory
        - name: logs
          mountPath: /app/logs
      volumes:
      - name: model-storage
        persistentVolumeClaim:
          claimName: model-storage-pvc
      - name: episodic-memory
        persistentVolumeClaim:
          claimName: memory-storage-pvc
      - name: logs
        persistentVolumeClaim:
          claimName: logs-storage-pvc

---
# Hamiltonian RL Service
apiVersion: apps/v1
kind: Deployment
metadata:
  name: hamiltonian-rl-service
  namespace: lunar-habitat-rl
spec:
  replicas: 2
  selector:
    matchLabels:
      app: hamiltonian-rl
  template:
    metadata:
      labels:
        app: hamiltonian-rl
        algorithm: physics-informed
    spec:
      containers:
      - name: hamiltonian-rl
        image: terragon/lunar-habitat-rl:hamiltonian-v2.0
        ports:
        - containerPort: 8081
        env:
        - name: ALGORITHM_TYPE
          value: "hamiltonian_rl"
        - name: PHYSICS_VALIDATION
          value: "strict"
        resources:
          requests:
            cpu: "500m"
            memory: "1Gi"
          limits:
            cpu: "2000m"
            memory: "4Gi"

---
# Meta-Adaptation RL Service  
apiVersion: apps/v1
kind: Deployment
metadata:
  name: meta-adaptation-service
  namespace: lunar-habitat-rl
spec:
  replicas: 2
  selector:
    matchLabels:
      app: meta-adaptation
  template:
    metadata:
      labels:
        app: meta-adaptation
        algorithm: meta-learning
    spec:
      containers:
      - name: meta-adaptation
        image: terragon/lunar-habitat-rl:meta-v2.0
        ports:
        - containerPort: 8082
        env:
        - name: ALGORITHM_TYPE
          value: "meta_adaptation_rl"
        - name: CONTINUAL_LEARNING
          value: "enabled"
        resources:
          requests:
            cpu: "500m"
            memory: "1Gi"
          limits:
            cpu: "2000m"
            memory: "4Gi"

---
# Load Balancer Service
apiVersion: v1
kind: Service
metadata:
  name: lunar-habitat-lb
  namespace: lunar-habitat-rl
  annotations:
    service.beta.kubernetes.io/aws-load-balancer-type: "nlb"
    service.beta.kubernetes.io/aws-load-balancer-cross-zone-load-balancing-enabled: "true"
spec:
  type: LoadBalancer
  selector:
    tier: primary
  ports:
  - name: causal-rl
    port: 8080
    targetPort: 8080
    protocol: TCP
  - name: hamiltonian-rl
    port: 8081
    targetPort: 8081
    protocol: TCP
  - name: meta-adaptation
    port: 8082
    targetPort: 8082
    protocol: TCP

---
# Horizontal Pod Autoscaler
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: causal-rl-hpa
  namespace: lunar-habitat-rl
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: causal-rl-service
  minReplicas: 2
  maxReplicas: 10
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80
  - type: Pods
    pods:
      metric:
        name: inference_requests_per_second
      target:
        type: AverageValue
        averageValue: "100"
  behavior:
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
      - type: Percent
        value: 10
        periodSeconds: 60
    scaleUp:
      stabilizationWindowSeconds: 60
      policies:
      - type: Percent
        value: 50
        periodSeconds: 30

---
# Persistent Volume Claims
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: model-storage-pvc
  namespace: lunar-habitat-rl
spec:
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 100Gi
  storageClassName: fast-ssd

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: memory-storage-pvc
  namespace: lunar-habitat-rl
spec:
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 50Gi
  storageClassName: fast-ssd

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: logs-storage-pvc
  namespace: lunar-habitat-rl
spec:
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 20Gi
  storageClassName: standard

---
# Service Account
apiVersion: v1
kind: ServiceAccount
metadata:
  name: lunar-habitat-sa
  namespace: lunar-habitat-rl

---
# RBAC
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: lunar-habitat-role
rules:
- apiGroups: [""]
  resources: ["pods", "services", "configmaps"]
  verbs: ["get", "list", "watch"]
- apiGroups: ["apps"]
  resources: ["deployments"]
  verbs: ["get", "list", "watch"]
- apiGroups: ["metrics.k8s.io"]
  resources: ["pods", "nodes"]
  verbs: ["get", "list"]

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: lunar-habitat-binding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: lunar-habitat-role
subjects:
- kind: ServiceAccount
  name: lunar-habitat-sa
  namespace: lunar-habitat-rl

---
# Network Policy for Security
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: lunar-habitat-netpol
  namespace: lunar-habitat-rl
spec:
  podSelector:
    matchLabels:
      app: causal-rl
  policyTypes:
  - Ingress
  - Egress
  ingress:
  - from:
    - namespaceSelector:
        matchLabels:
          name: monitoring
    - namespaceSelector:
        matchLabels:
          name: nasa-mission-control
    ports:
    - protocol: TCP
      port: 8080
  egress:
  - to:
    - namespaceSelector:
        matchLabels:
          name: monitoring
  - to: []
    ports:
    - protocol: TCP
      port: 443  # HTTPS outbound

---
# Pod Disruption Budget
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: causal-rl-pdb
  namespace: lunar-habitat-rl
spec:
  minAvailable: 2
  selector:
    matchLabels:
      app: causal-rl

---
# Custom Resource Definition for Mission Config
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: missionconfigs.lunar.terragon.ai
spec:
  group: lunar.terragon.ai
  versions:
  - name: v1
    served: true
    storage: true
    schema:
      openAPIV3Schema:
        type: object
        properties:
          spec:
            type: object
            properties:
              missionPhase:
                type: string
                enum: ["pre_deployment", "surface_operations", "emergency", "maintenance"]
              crewSize:
                type: integer
                minimum: 1
                maximum: 8
              missionDuration:
                type: integer
                minimum: 1
              safetyMode:
                type: string
                enum: ["nominal", "enhanced", "maximum"]
              algorithms:
                type: object
                properties:
                  causalRL:
                    type: boolean
                  hamiltonianRL:
                    type: boolean
                  metaAdaptation:
                    type: boolean
  scope: Namespaced
  names:
    plural: missionconfigs
    singular: missionconfig
    kind: MissionConfig

---
# Mission Configuration Instance
apiVersion: lunar.terragon.ai/v1
kind: MissionConfig
metadata:
  name: artemis-surface-ops
  namespace: lunar-habitat-rl
spec:
  missionPhase: "surface_operations"
  crewSize: 4
  missionDuration: 180  # days
  safetyMode: "enhanced"
  algorithms:
    causalRL: true
    hamiltonianRL: true
    metaAdaptation: true